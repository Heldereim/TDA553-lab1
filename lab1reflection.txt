1. We chose to create a superclass that we call Car, contained in this class is all the things that are common for a car, such as 
color, enginepower, current speed etc. The decision was made to avoid duplication of code. We keep most of these attributes as private 
and use setters/getters for changing these attributes, though some attributes will remain unavailable for change, such as the modelname
or the number of doors since these require significantly more work to change.

We felt changing certain bits of the car should be possible, for this reason it is possible to change the amount of doors and the engine power.
Additionally we decided that it should be possible to make a car without specifically making a Volvo240 or a Saab95.

2. For gas and brake we implemented if-statements that checked if your input was higher or lower than the allowed interval,
and if it was above the range it set to max, or lower it set to the lowest possible value. The philosophy behind this decision is 
that when people say "Floor it!" they generally mean to fully gas which in our case would be a 1, but the exclamation gives the impression
that you are giving more than the full amount, therefore "Floor it!" might be interpreted as a value of 40 but will still count as a full gas
of 1. The alternative would have been to simply not accept a value outside [0,1], and while this might be appropriate in some circumstances
we felt this was not one of those. 

setCurrentSpeed can't be outside interval 0-enginePower because of the limitations in increment- and decrementSpeed
that sets its max to enginePower and min to 0.

Gas calls incrementSpeed which only adds a positive number to currentSpeed, meaning that it can't decrease.
Break calls decrementSpeed which only subtracts a positive number from currentSpeed, meaning that it can only decrease.